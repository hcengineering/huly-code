{
  "imports": {
    "granularity": {
      "group": "module"
    },
    "prefix": "self"
  },
  "cargo": {
    "buildScripts": {
      "enable": true
    }
  },
  "completion": {
    "autoimport": {
      "enable": true
    },
    "autoself": {
      "enable": true
    },
    "callable": {
      "snippets": "fill_arguments"
    },
    "fullFunctionSignatures": {
      "enable": false
    },
    "limit": null,
    "postfix": {
      "enable": true
    },
    "privateEditable": {
      "enable": false
    },
    "snippets": {
      "custom": {
        "Arc::new": {
          "postfix": "arc",
          "body": "Arc::new(${receiver})",
          "requires": "std::sync::Arc",
          "description": "Put the expression into an `Arc`",
          "scope": "expr"
        },
        "Rc::new": {
          "postfix": "rc",
          "body": "Rc::new(${receiver})",
          "requires": "std::rc::Rc",
          "description": "Put the expression into an `Rc`",
          "scope": "expr"
        },
        "Box::pin": {
          "postfix": "pinbox",
          "body": "Box::pin(${receiver})",
          "requires": "std::boxed::Box",
          "description": "Put the expression into a pinned `Box`",
          "scope": "expr"
        },
        "Ok": {
          "postfix": "ok",
          "body": "Ok(${receiver})",
          "description": "Wrap the expression in a `Result::Ok`",
          "scope": "expr"
        },
        "Err": {
          "postfix": "err",
          "body": "Err(${receiver})",
          "description": "Wrap the expression in a `Result::Err`",
          "scope": "expr"
        },
        "Some": {
          "postfix": "some",
          "body": "Some(${receiver})",
          "description": "Wrap the expression in an `Option::Some`",
          "scope": "expr"
        }
      }
    }
  },
  "termSearch": {
    "enable": false,
    "fuel": 200
  },
  "procMacro": {
    "enable": true
  }
}