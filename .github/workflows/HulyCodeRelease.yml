name: Huly Code Release
on:
  workflow_dispatch:
env:
  artifacts_dir: 'out/huly-code/artifacts'
  android_commit: 'c6262f02dcd4f1f813e4820e995861251c8fff54'
jobs:
  # a single job for all OSes cannot be used due to free disk space lack on runners
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2
        with:
          submodules: recursive
      - uses: ./.github/actions/build_ide
        with:
          os: linux
          arch: x64
          extension: tar.gz
      - uses: ./.github/actions/upload_ide
        with:
          os: linux
          extension: tar.gz
          artifacts_dir: ${{env.artifacts_dir}}
          name-prefix: artifact-
  build-windows:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2
        with:
          submodules: recursive
      - uses: ./.github/actions/build_ide
        with:
          os: windows
          arch: x64
          extension: exe
      - uses: ./.github/actions/upload_ide
        with:
          os: windows
          extension: exe
          artifacts_dir: ${{env.artifacts_dir}}
          name-prefix: artifact-
      - uses: ./.github/actions/upload_ide
        with:
          os: windows
          extension: win.zip
          artifacts_dir: ${{env.artifacts_dir}}
          name-prefix: artifact-
  build-macos:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2
        with:
          submodules: recursive
      - uses: ./.github/actions/build_ide
        with:
          os: mac
          arch: aarch64
          extension: sit
      - uses: ./.github/actions/upload_ide
        with:
          os: mac
          extension: sit
          artifacts_dir: ${{env.artifacts_dir}}
      - name: Upload .dmg build scripts
        uses: actions/upload-artifact@v4.4.3
        with:
          name: dmg-build-scripts
          if-no-files-found: 'error'
          retention-days: 1
          path: ${{env.artifacts_dir}}/macos-dmg-build/
  build-dmg:
    runs-on: macos-latest
    needs: build-macos
    steps:
      - uses: actions/checkout@v4.2.2
        with:
          submodules: recursive
      - name: Download .dmg build scripts
        uses: actions/download-artifact@v4.1.8
        with:
          name: dmg-build-scripts
      - name: Download .sit
        uses: actions/download-artifact@v4.1.8
        with:
          name: mac-sit
      - name: Import certificates
        uses: apple-actions/import-codesign-certs@v3
        with:
          p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
          p12-password: ${{ secrets.CERTIFICATES_P12_PASSWORD }}
      - name: Build .dmg
        env:
          CONTENT_SIGNED: false
          STAPLE: false
        shell: bash
        # language=bash
        run: /bin/bash ./build.sh
      - name: Upload .dmg
        uses: ./.github/actions/upload_ide
        with:
          os: mac
          extension: dmg
          artifacts_dir: .
          name-prefix: artifact-
  publish:
    needs: [build-linux, build-windows, build-dmg]
    runs-on: ubuntu-latest
    steps:
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: publish
          pattern: artifact-*
          merge-multiple: true
      - run: ls -R publish
      - name: Publish artifacts to R2
        uses: ryand56/r2-upload-action@latest
        with:
          r2-account-id: ${{ secrets.R2_ACCOUNT_ID }}
          r2-access-key-id: ${{ secrets.R2_ACCESS_KEY_ID }}
          r2-secret-access-key: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          r2-bucket: desktop-distro
          source-dir: ./publish/
          destination-dir: ./code/